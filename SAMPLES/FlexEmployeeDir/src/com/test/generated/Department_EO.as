/*************************** DO NOT MODIFY THIS FILE **************************
 *
 * Generated by Athena Console. All Rights Reserved by Athena Source (c) 2007 - 2011.
 * www.athenaframework.org
 *
 * Generated on Feb 21, 2011 14:13:16 by Jack (Windows 7 6.1 [x86])
 * DB: Derby 10.6[connection pool - driver class: org.apache.derby.jdbc.EmbeddedDriver, url: jdbc:derby:E:\INSPRISE\AthenaES\Tools\eclipse3.4.1\WORKSPACE\JavaEmployeeDir\empdb;create=true, max active: 10, max idle: 0, max wait time: 5000, connection timeout: 300]
 *
 ******************************************************************************/

package com.test.generated {

import org.athenasource.framework.eo.core.EOObject;
import org.athenasource.framework.eo.core.ToManyArrayCollection;

/**
 * Generated EO class for Department
 *
 * @version 1
 */
public class Department_EO extends EOObject {

	public static const META_XSD_VERSION:String = "2.0"; // META VERSION
	public static const COLUMN_COUNT:int = 6; // total number of columns, i.e., attributes
	public static const ENTITY_ID:int = 101; // the entity id
	public static const SYSTEM_NAME:String = "Department"; // the entity system name. 

	public static const TABLE_NAME:String = "Data_Department"; // the table name. 

	// Property names 
	public static const ATTR_department_ID:String = "department_ID"; // Primary key
	public static const ATTR_version:String = "version"; // Version
	public static const ATTR_status:String = "status"; // EO status
	public static const ATTR_ORG_ID:String = "ORG_ID"; // Organization
	public static const ATTR_nameFull:String = "nameFull"; // Full name
	public static const ATTR_description:String = "description"; // Description

	public static const REL_employees:String = "employees";

	/**
	 * Gets Department ID (Primary key).
	 * @return Department ID
	 */
	[Bindable(event="propertyChange")]
	public function get department_ID():int {
		return getValue(0) == null ?  -1 : int(getValue(0));
	}

	/**
	 * Sets Department ID (Primary key).
	 * @param department_ID Department ID
	 */
	public function set department_ID(department_ID_:int):void {
		setValue(0, department_ID_ == -1 ? null : department_ID_, true); 
	}

	/**
	 * Gets Version (Version).
	 * @return Version
	 */
	[Bindable(event="propertyChange")]
	public function get version():int {
		return getValue(1) == null ?  -1 : int(getValue(1));
	}

	/**
	 * Sets Version (Version).
	 * @param version Version
	 */
	public function set version(version_:int):void {
		setValue(1, version_ == -1 ? null : version_, true); 
	}

	/**
	 * Gets Status (EO status).
	 * @return Status
	 */
	[Bindable(event="propertyChange")]
	public function get status():int {
		return getValue(2) == null ?  -1 : int(getValue(2));
	}

	/**
	 * Sets Status (EO status).
	 * @param status Status
	 */
	public function set status(status_:int):void {
		setValue(2, status_ == -1 ? null : status_, true); 
	}

	/**
	 * Gets Org ID (Organization).
	 * @return Org ID
	 */
	[Bindable(event="propertyChange")]
	public function get ORG_ID():int {
		return getValue(3) == null ?  -1 : int(getValue(3));
	}

	/**
	 * Sets Org ID (Organization).
	 * @param ORG_ID Org ID
	 */
	public function set ORG_ID(ORG_ID_:int):void {
		setValue(3, ORG_ID_ == -1 ? null : ORG_ID_, true); 
	}

	/**
	 * Gets Full name (Full name).
	 * @return Full name
	 */
	[Bindable(event="propertyChange")]
	public function get nameFull():String {
		var v:String = getValue(4) as String; 
		return v;
	}

	/**
	 * Sets Full name (Full name).
	 * @param nameFull Full name
	 */
	public function set nameFull(nameFull_:String):void {
		setValue(4, nameFull_, true); 
	}

	/**
	 * Gets Description (Description).
	 * @return Description
	 */
	[Bindable(event="propertyChange")]
	public function get description():String {
		var v:String = getValue(5) as String; 
		return v;
	}

	/**
	 * Sets Description (Description).
	 * @param description Description
	 */
	public function set description(description_:String):void {
		setValue(5, description_, true); 
	}

	// -------------------------------------- Relationships --------------------------------------

	/**
	 * [INVERSE] (Complement rel: Employee.department) Gets the collection of Employee in employees
	 * null - null
	 * 
	 * @return the collection of Employee in employees
	 */
	[Bindable(event="propertyChange")]
	public function get employees():ToManyArrayCollection { 
		return getRelationshipTargetObjectsList("employees"); 
	}

	/**
	 * [INVERSE] (Complement rel: Employee.department) Adds the specified Employee and optionally updates the complement relationship object. 
	 * null - null
	 * 
	 * @param employee The Employee to be added.
	 * @param updateComplementRelationship Whether to update the target object of the complement to-one relationship object to this object.
	 * @return <code>true</code> if added successfully; <code>false</code> if the specified item already in the collection.
	 */
	public function addToEmployees(employee:EOObject, updateComplementRelationship:Boolean = false):Boolean {
		return addRelationshipTargetObject("employees", employee, updateComplementRelationship);
	}

	/**
	 * [INVERSE] (Complement rel: Employee.department) Removes the specified Employee and optionally updates the complement relationship object. 
	 * null - null
	 * 
	 * @param employee The Employee to be removed.
	 * @param updateComplementRelationship Whether to update the target object of the complement to-one relationship object to null.
	 * @return <code>true</code> if removed successfully; <code>false</code> if the specified item was not in the collection.
	 */
	public function removeFromEmployees(employee:EOObject, updateComplementRelationship:Boolean = false):Boolean {
		return removeRelationshipTargetObject("employees", employee, updateComplementRelationship);
	}

} // end class
} // end package
/********************* DO NOT MODIFY - ATHENA CODE GENERATION LOG *******************
 * @file_type CUSTOM CLASS - ActionScript 3
 * @entity_id 101
 * @entity_classname com.test.Department
 * @entity_fingerprint 1f98e5f57d536984e6f94326114fff53
 * @entity_version 1
 * @generated_on 1298268796518
 * @generated_by Jack
 * @generated_platform Windows 7 6.1 [x86]
 ******************************************************************************/